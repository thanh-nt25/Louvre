{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { TextButton } from \"../../components\";\nimport { COLORS, FONTS } from \"../../constants\";\nimport { useState } from \"react\";\nimport { SvgUri } from \"react-native-svg\";\nimport logos from \"../../constants/logo\";\nimport { LoginReq } from \"../../requests/OnboardReq\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  console.log(\"email: \" + email);\n  console.log(\"password: \" + password);\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    accessible: false,\n    children: _jsxs(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(SvgUri, {\n        style: {\n          marginTop: \"-60%\"\n        },\n        width: \"100%\",\n        height: \"100%\",\n        uri: logos.logo_light_transparent\n      }), _jsxs(View, {\n        style: {\n          top: -300,\n          marginLeft: \"-20%\"\n        },\n        children: [_jsx(Text, {\n          style: _objectSpread({\n            fontWeight: \"bold\"\n          }, FONTS.h2),\n          children: \"Welcome!\"\n        }), _jsxs(Text, {\n          style: _objectSpread(_objectSpread({}, FONTS.body4), {}, {\n            color: COLORS.lightGray1_new\n          }),\n          children: [\"Please login or sign up to continue\", \" \"]\n        }), _jsxs(View, {\n          style: {\n            marginTop: 60\n          },\n          children: [_jsxs(View, {\n            children: [_jsx(Text, {\n              style: _objectSpread({\n                fontWeight: \"bold\"\n              }, FONTS.h3),\n              children: \"Email\"\n            }), _jsx(TextInput, {\n              style: _objectSpread({}, FONTS.h3),\n              onChangeText: setEmail,\n              autoCapitalize: \"none\"\n            }), _jsx(View, {\n              style: {\n                height: 1,\n                width: \"135%\",\n                backgroundColor: COLORS.lightGray1_new\n              }\n            })]\n          }), _jsxs(View, {\n            style: {\n              marginTop: 20\n            },\n            children: [_jsx(Text, {\n              style: _objectSpread({\n                fontWeight: \"bold\"\n              }, FONTS.h3),\n              children: \"Password\"\n            }), _jsx(TextInput, {\n              style: _objectSpread({}, FONTS.h3),\n              onChangeText: setPassword,\n              secureTextEntry: true,\n              autoCapitalize: \"none\"\n            }), _jsx(View, {\n              style: {\n                height: 1,\n                width: \"135%\",\n                backgroundColor: COLORS.lightGray1_new\n              }\n            })]\n          })]\n        })]\n      }), _jsx(TextButton, {\n        label: \"Login\",\n        labelStyle: styles.label,\n        buttonContainerStyle: styles.buttonContainer,\n        onPress: function onPress() {\n          return LoginReq(email, password);\n        }\n      })]\n    })\n  });\n};\nexport default Login;\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    width: 353,\n    height: 51,\n    borderRadius: 20,\n    alignSelf: \"center\",\n    backgroundColor: \"black\",\n    top: -150,\n    marginTop: 20\n  },\n  label: {\n    alignSelf: \"center\",\n    color: \"white\"\n  },\n  overlay: {\n    backgroundColor: \"rgba(255,0,0,0.5)\"\n  }\n});","map":{"version":3,"names":["TextButton","COLORS","FONTS","useState","SvgUri","logos","LoginReq","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","console","log","TouchableWithoutFeedback","onPress","Keyboard","dismiss","accessible","children","View","style","flex","justifyContent","alignItems","marginTop","width","height","uri","logo_light_transparent","top","marginLeft","Text","_objectSpread","fontWeight","h2","body4","color","lightGray1_new","h3","TextInput","onChangeText","autoCapitalize","backgroundColor","secureTextEntry","label","labelStyle","styles","buttonContainerStyle","buttonContainer","StyleSheet","create","borderRadius","alignSelf","overlay"],"sources":["C:/Users/Admin/Code/git clone/EThrift/client/screens/Onboarding/Login.js"],"sourcesContent":["import {\r\n  View,\r\n  Text,\r\n  ImageBackground,\r\n  Image,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n} from \"react-native\";\r\nimport { TextButton } from \"../../components\";\r\nimport { COLORS, FONTS } from \"../../constants\";\r\nimport { useState } from \"react\";\r\nimport { SvgUri } from \"react-native-svg\";\r\nimport logos from \"../../constants/logo\";\r\nimport { LoginReq } from \"../../requests/OnboardReq\";\r\n\r\nconst Login = ({ navigation }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  console.log(\"email: \" + email);\r\n  console.log(\"password: \" + password);\r\n/*\r\n  const onPress = async () => {\r\n    axios\r\n      .post(\"https://ethriftbe.herokuapp.com/signin\", {\r\n        email: email,\r\n        password: password,\r\n      })\r\n      .then((response) => {\r\n        alert(\"success\");\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        alert(error);\r\n      });\r\n  };\r\n  */\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <SvgUri\r\n          style={{ marginTop: \"-60%\" }}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          uri={logos.logo_light_transparent}\r\n        />\r\n\r\n        <View style={{ top: -300, marginLeft: \"-20%\" }}>\r\n          <Text style={{ fontWeight: \"bold\", ...FONTS.h2 }}>Welcome!</Text>\r\n          <Text style={{ ...FONTS.body4, color: COLORS.lightGray1_new }}>\r\n            Please login or sign up to continue{\" \"}\r\n          </Text>\r\n\r\n          <View style={{ marginTop: 60 }}>\r\n            <View>\r\n              <Text style={{ fontWeight: \"bold\", ...FONTS.h3 }}>Email</Text>\r\n              <TextInput\r\n                style={{ ...FONTS.h3 }}\r\n                onChangeText={setEmail}\r\n                autoCapitalize='none'\r\n              />\r\n              <View\r\n                style={{\r\n                  height: 1,\r\n                  width: \"135%\",\r\n                  backgroundColor: COLORS.lightGray1_new,\r\n                }}\r\n              ></View>\r\n            </View>\r\n\r\n            <View style={{ marginTop: 20 }}>\r\n              <Text style={{ fontWeight: \"bold\", ...FONTS.h3 }}>Password</Text>\r\n              <TextInput\r\n                style={{ ...FONTS.h3 }}\r\n                onChangeText={setPassword}\r\n                secureTextEntry={true}\r\n                autoCapitalize='none'\r\n              />\r\n              <View\r\n                style={{\r\n                  height: 1,\r\n                  width: \"135%\",\r\n                  backgroundColor: COLORS.lightGray1_new,\r\n                }}\r\n              ></View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <TextButton\r\n          label={\"Login\"}\r\n          labelStyle={styles.label}\r\n          buttonContainerStyle={styles.buttonContainer}\r\n          onPress={()=>LoginReq(email,password)}\r\n        />\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    width: 353,\r\n    height: 51,\r\n    borderRadius: 20,\r\n    alignSelf: \"center\",\r\n    backgroundColor: \"black\",\r\n    top: -150,\r\n    marginTop: 20,\r\n  },\r\n  label: {\r\n    alignSelf: \"center\",\r\n    color: \"white\",\r\n  },\r\n  overlay: {\r\n    backgroundColor: \"rgba(255,0,0,0.5)\",\r\n  },\r\n});\r\n\r\n/*\r\n\r\nimport { Text, View, Image, TouchableOpacity } from \"react-native\";\r\nimport styles from \"./styles\";\r\n\r\nimport * as React from \"react\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\n\r\nexport default function FirstScreen({navigation}) {\r\n\r\n    const signUpPress=() => {\r\n        navigation.navigate('Sign Up Screen')\r\n    }\r\n  return (\r\n    <LinearGradient\r\n      start={{ x: 0.0, y: 0.25 }}\r\n      end={{ x: 0.5, y: 1.0 }}\r\n      locations={[0, 0.5]}\r\n      colors={[\"#3550DC\", \"#27E9F7\"]}\r\n      style={styles.linearGradient}\r\n    >\r\n      <View style={{ flexDirection: \"column\" }}>\r\n        <Image\r\n          style={styles.mainImage}\r\n          source={{\r\n            uri: \"https://user-images.githubusercontent.com/43158356/172126265-6922d4e5-4413-4d65-8213-82c690ad3b5b.png\",\r\n          }}\r\n        />\r\n\r\n        <View style={{top: 80}}>\r\n          <Text style={styles.appNameText}>QuizzMe</Text>\r\n          <Text style={styles.infoText}>Test your knowledge!</Text>\r\n\r\n          <TouchableOpacity\r\n            style={styles.signUpButton}\r\n            onPress={signUpPress}\r\n          >\r\n            <Text style = {styles.signUpButtonText}>SIGN UP</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Text style = {styles.logInText}>ALREADY HAVE AN ACCOUNT?<Text onPress={()=> navigation.navigate('Log In Screen')} style = {{ color: 'black' }}> LOG IN</Text></Text>\r\n        </View>\r\n      </View>\r\n    </LinearGradient>\r\n  );\r\n}\r\n\r\n\r\n\r\nimport { StyleSheet } from \"react-native\";\r\n\r\nconst styles = StyleSheet.create({\r\n  linearGradient: {\r\n    flex: 1,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    borderRadius: 5,\r\n  },\r\n  mainImage: {\r\n    width: 367,\r\n    height: 371,\r\n    top: 200,\r\n  },\r\n  signUpButton: {\r\n    width: 353,\r\n    height: 51,\r\n    borderRadius: 20,\r\n    alignSelf: \"center\",\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    top: 250,\r\n  },\r\n  signUpButtonText:{\r\n    alignSelf:\"center\",\r\n    top: 6,\r\n    fontSize: 14,\r\n    \r\n  },\r\n  appNameText:{\r\n    alignSelf: \"center\",\r\n    color: \"white\",\r\n    fontSize: 30,\r\n    top: 180,\r\n  },\r\n  infoText:{\r\n    alignSelf: \"center\",\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    top: 180,\r\n    fontStyle: \"italic\",\r\n  }, \r\n  logInText:{\r\n    alignSelf: \"center\",\r\n    color: \"white\",\r\n    fontSize: 14,\r\n    top: 270,\r\n  }\r\n});\r\nexport default styles;\r\n\r\n\r\n\r\n*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}