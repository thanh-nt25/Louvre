{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createContext, useContext, useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar LoginContext = createContext();\nvar LoginProvider = function LoginProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  return _jsx(LoginContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn\n    },\n    children: children\n  });\n};\nexport var useLogin = function useLogin() {\n  return useContext(LoginContext);\n};\nexport default LoginProvider;","map":{"version":3,"names":["createContext","useContext","useState","jsx","_jsx","LoginContext","LoginProvider","_ref","children","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","Provider","value","useLogin"],"sources":["C:/Users/Admin/Code/git clone/EThrift/client/context/LoginProvider.js"],"sourcesContent":["import { createContext, useContext, useState  } from \"react\";\r\n\r\nconst LoginContext = createContext()\r\n\r\nconst LoginProvider = ({children}) => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n    return <LoginContext.Provider value={{isLoggedIn, setIsLoggedIn}}>\r\n        {children}\r\n    </LoginContext.Provider>\r\n}\r\n\r\nexport const useLogin = () => useContext(LoginContext)\r\n\r\nexport default LoginProvider"],"mappings":";AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAS,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE7D,IAAMC,YAAY,GAAGL,aAAa,CAAC,CAAC;AAEpC,IAAMM,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAmB;EAAA,IAAdC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAC5B,IAAAC,SAAA,GAAoCP,QAAQ,CAAC,IAAI,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,OAAON,IAAA,CAACC,YAAY,CAACS,QAAQ;IAACC,KAAK,EAAE;MAACH,UAAU,EAAVA,UAAU;MAAEC,aAAa,EAAbA;IAAa,CAAE;IAAAL,QAAA,EAC5DA;EAAQ,CACU,CAAC;AAC5B,CAAC;AAED,OAAO,IAAMQ,QAAQ,GAAG,SAAXA,QAAQA,CAAA;EAAA,OAASf,UAAU,CAACI,YAAY,CAAC;AAAA;AAEtD,eAAeC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}