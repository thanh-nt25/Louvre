{"ast":null,"code":"import { cond, sub, divide, multiply, add, block, set, greaterOrEq, proc } from \"../base\";\nvar internalTiming = proc(function (clock, time, frameTime, position, finished, toValue, duration, nextProgress, progress, newFrameTime) {\n  var state = {\n    time: time,\n    finished: finished,\n    frameTime: frameTime,\n    position: position\n  };\n  var config = {\n    duration: duration,\n    toValue: toValue\n  };\n  var distanceLeft = sub(config.toValue, state.position);\n  var fullDistance = divide(distanceLeft, sub(1, progress));\n  var startPosition = sub(config.toValue, fullDistance);\n  var nextPosition = add(startPosition, multiply(fullDistance, nextProgress));\n  return block([cond(greaterOrEq(newFrameTime, config.duration), [set(state.position, config.toValue), set(state.finished, 1)], set(state.position, nextPosition)), set(state.frameTime, newFrameTime), set(state.time, clock)]);\n});\nexport default function timing(clock, state, config) {\n  if (config.duration === 0) {\n    return block([set(state.position, config.toValue), set(state.finished, 1)]);\n  }\n  var lastTime = cond(state.time, state.time, clock);\n  var newFrameTime = add(state.frameTime, sub(clock, lastTime));\n  var nextProgress = config.easing(divide(newFrameTime, config.duration));\n  var progress = config.easing(divide(state.frameTime, config.duration));\n  return internalTiming(clock, state.time, state.frameTime, state.position, state.finished, config.toValue, config.duration, nextProgress, progress, newFrameTime);\n}","map":{"version":3,"names":["cond","sub","divide","multiply","add","block","set","greaterOrEq","proc","internalTiming","clock","time","frameTime","position","finished","toValue","duration","nextProgress","progress","newFrameTime","state","config","distanceLeft","fullDistance","startPosition","nextPosition","timing","lastTime","easing"],"sources":["C:/Users/Admin/Code/git clone/EThrift/client/node_modules/react-native-reanimated/lib/reanimated1/animations/timing.js"],"sourcesContent":["import {\r\n  cond,\r\n  sub,\r\n  divide,\r\n  multiply,\r\n  add,\r\n  block,\r\n  set,\r\n  greaterOrEq,\r\n  proc,\r\n} from '../base';\r\n\r\nconst internalTiming = proc(function (\r\n  clock,\r\n  time,\r\n  frameTime,\r\n  position,\r\n  finished,\r\n  toValue,\r\n  duration,\r\n  nextProgress,\r\n  progress,\r\n  newFrameTime\r\n) {\r\n  const state = {\r\n    time,\r\n    finished,\r\n    frameTime,\r\n    position,\r\n  };\r\n\r\n  const config = {\r\n    duration,\r\n    toValue,\r\n  };\r\n\r\n  const distanceLeft = sub(config.toValue, state.position);\r\n  const fullDistance = divide(distanceLeft, sub(1, progress));\r\n  const startPosition = sub(config.toValue, fullDistance);\r\n  const nextPosition = add(startPosition, multiply(fullDistance, nextProgress));\r\n\r\n  return block([\r\n    cond(\r\n      greaterOrEq(newFrameTime, config.duration),\r\n      [set(state.position, config.toValue), set(state.finished, 1)],\r\n      set(state.position, nextPosition)\r\n    ),\r\n    set(state.frameTime, newFrameTime),\r\n    set(state.time, clock),\r\n  ]);\r\n});\r\n\r\nexport default function timing(clock, state, config) {\r\n  if (config.duration === 0) {\r\n    // when duration is zero we end the timing immediately\r\n    return block([set(state.position, config.toValue), set(state.finished, 1)]);\r\n  }\r\n  const lastTime = cond(state.time, state.time, clock);\r\n  const newFrameTime = add(state.frameTime, sub(clock, lastTime));\r\n  const nextProgress = config.easing(divide(newFrameTime, config.duration));\r\n  const progress = config.easing(divide(state.frameTime, config.duration));\r\n  return internalTiming(\r\n    clock,\r\n    state.time,\r\n    state.frameTime,\r\n    state.position,\r\n    state.finished,\r\n    config.toValue,\r\n    config.duration,\r\n    nextProgress,\r\n    progress,\r\n    newFrameTime\r\n  );\r\n}\r\n"],"mappings":"AAAA,SACEA,IAAI,EACJC,GAAG,EACHC,MAAM,EACNC,QAAQ,EACRC,GAAG,EACHC,KAAK,EACLC,GAAG,EACHC,WAAW,EACXC,IAAI;AAGN,IAAMC,cAAc,GAAGD,IAAI,CAAC,UAC1BE,KAAK,EACLC,IAAI,EACJC,SAAS,EACTC,QAAQ,EACRC,QAAQ,EACRC,OAAO,EACPC,QAAQ,EACRC,YAAY,EACZC,QAAQ,EACRC,YAAY,EACZ;EACA,IAAMC,KAAK,GAAG;IACZT,IAAI,EAAJA,IAAI;IACJG,QAAQ,EAARA,QAAQ;IACRF,SAAS,EAATA,SAAS;IACTC,QAAQ,EAARA;EACF,CAAC;EAED,IAAMQ,MAAM,GAAG;IACbL,QAAQ,EAARA,QAAQ;IACRD,OAAO,EAAPA;EACF,CAAC;EAED,IAAMO,YAAY,GAAGrB,GAAG,CAACoB,MAAM,CAACN,OAAO,EAAEK,KAAK,CAACP,QAAQ,CAAC;EACxD,IAAMU,YAAY,GAAGrB,MAAM,CAACoB,YAAY,EAAErB,GAAG,CAAC,CAAC,EAAEiB,QAAQ,CAAC,CAAC;EAC3D,IAAMM,aAAa,GAAGvB,GAAG,CAACoB,MAAM,CAACN,OAAO,EAAEQ,YAAY,CAAC;EACvD,IAAME,YAAY,GAAGrB,GAAG,CAACoB,aAAa,EAAErB,QAAQ,CAACoB,YAAY,EAAEN,YAAY,CAAC,CAAC;EAE7E,OAAOZ,KAAK,CAAC,CACXL,IAAI,CACFO,WAAW,CAACY,YAAY,EAAEE,MAAM,CAACL,QAAQ,CAAC,EAC1C,CAACV,GAAG,CAACc,KAAK,CAACP,QAAQ,EAAEQ,MAAM,CAACN,OAAO,CAAC,EAAET,GAAG,CAACc,KAAK,CAACN,QAAQ,EAAE,CAAC,CAAC,CAAC,EAC7DR,GAAG,CAACc,KAAK,CAACP,QAAQ,EAAEY,YAAY,CAClC,CAAC,EACDnB,GAAG,CAACc,KAAK,CAACR,SAAS,EAAEO,YAAY,CAAC,EAClCb,GAAG,CAACc,KAAK,CAACT,IAAI,EAAED,KAAK,CAAC,CACvB,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,SAASgB,MAAMA,CAAChB,KAAK,EAAEU,KAAK,EAAEC,MAAM,EAAE;EACnD,IAAIA,MAAM,CAACL,QAAQ,KAAK,CAAC,EAAE;IAEzB,OAAOX,KAAK,CAAC,CAACC,GAAG,CAACc,KAAK,CAACP,QAAQ,EAAEQ,MAAM,CAACN,OAAO,CAAC,EAAET,GAAG,CAACc,KAAK,CAACN,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;EAC7E;EACA,IAAMa,QAAQ,GAAG3B,IAAI,CAACoB,KAAK,CAACT,IAAI,EAAES,KAAK,CAACT,IAAI,EAAED,KAAK,CAAC;EACpD,IAAMS,YAAY,GAAGf,GAAG,CAACgB,KAAK,CAACR,SAAS,EAAEX,GAAG,CAACS,KAAK,EAAEiB,QAAQ,CAAC,CAAC;EAC/D,IAAMV,YAAY,GAAGI,MAAM,CAACO,MAAM,CAAC1B,MAAM,CAACiB,YAAY,EAAEE,MAAM,CAACL,QAAQ,CAAC,CAAC;EACzE,IAAME,QAAQ,GAAGG,MAAM,CAACO,MAAM,CAAC1B,MAAM,CAACkB,KAAK,CAACR,SAAS,EAAES,MAAM,CAACL,QAAQ,CAAC,CAAC;EACxE,OAAOP,cAAc,CACnBC,KAAK,EACLU,KAAK,CAACT,IAAI,EACVS,KAAK,CAACR,SAAS,EACfQ,KAAK,CAACP,QAAQ,EACdO,KAAK,CAACN,QAAQ,EACdO,MAAM,CAACN,OAAO,EACdM,MAAM,CAACL,QAAQ,EACfC,YAAY,EACZC,QAAQ,EACRC,YACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}