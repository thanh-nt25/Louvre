{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { CommonActions, DrawerActions, useLinkBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport DrawerItem from \"./DrawerItem\";\nexport default function DrawerItemList(_ref) {\n  var state = _ref.state,\n    navigation = _ref.navigation,\n    descriptors = _ref.descriptors;\n  var buildLink = useLinkBuilder();\n  var focusedRoute = state.routes[state.index];\n  var focusedDescriptor = descriptors[focusedRoute.key];\n  var focusedOptions = focusedDescriptor.options;\n  var drawerActiveTintColor = focusedOptions.drawerActiveTintColor,\n    drawerInactiveTintColor = focusedOptions.drawerInactiveTintColor,\n    drawerActiveBackgroundColor = focusedOptions.drawerActiveBackgroundColor,\n    drawerInactiveBackgroundColor = focusedOptions.drawerInactiveBackgroundColor;\n  return state.routes.map(function (route, i) {\n    var focused = i === state.index;\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'drawerItemPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (!event.defaultPrevented) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, focused ? DrawerActions.closeDrawer() : CommonActions.navigate({\n          name: route.name,\n          merge: true\n        })), {}, {\n          target: state.key\n        }));\n      }\n    };\n    var _descriptors$route$ke = descriptors[route.key].options,\n      title = _descriptors$route$ke.title,\n      drawerLabel = _descriptors$route$ke.drawerLabel,\n      drawerIcon = _descriptors$route$ke.drawerIcon,\n      drawerLabelStyle = _descriptors$route$ke.drawerLabelStyle,\n      drawerItemStyle = _descriptors$route$ke.drawerItemStyle,\n      drawerAllowFontScaling = _descriptors$route$ke.drawerAllowFontScaling;\n    return React.createElement(DrawerItem, {\n      key: route.key,\n      label: drawerLabel !== undefined ? drawerLabel : title !== undefined ? title : route.name,\n      icon: drawerIcon,\n      focused: focused,\n      activeTintColor: drawerActiveTintColor,\n      inactiveTintColor: drawerInactiveTintColor,\n      activeBackgroundColor: drawerActiveBackgroundColor,\n      inactiveBackgroundColor: drawerInactiveBackgroundColor,\n      allowFontScaling: drawerAllowFontScaling,\n      labelStyle: drawerLabelStyle,\n      style: drawerItemStyle,\n      to: buildLink(route.name, route.params),\n      onPress: onPress\n    });\n  });\n}","map":{"version":3,"names":["CommonActions","DrawerActions","useLinkBuilder","React","DrawerItem","DrawerItemList","_ref","state","navigation","descriptors","buildLink","focusedRoute","routes","index","focusedDescriptor","key","focusedOptions","options","drawerActiveTintColor","drawerInactiveTintColor","drawerActiveBackgroundColor","drawerInactiveBackgroundColor","map","route","i","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","_objectSpread","closeDrawer","navigate","name","merge","_descriptors$route$ke","title","drawerLabel","drawerIcon","drawerLabelStyle","drawerItemStyle","drawerAllowFontScaling","createElement","label","undefined","icon","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","allowFontScaling","labelStyle","style","to","params"],"sources":["C:\\Users\\Admin\\Code\\git clone\\EThrift\\client\\node_modules\\@react-navigation\\drawer\\lib\\module\\views\\DrawerItemList.tsx"],"sourcesContent":["import {\n  CommonActions,\n  DrawerActions,\n  DrawerNavigationState,\n  ParamListBase,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type { DrawerDescriptorMap, DrawerNavigationHelpers } from '../types';\nimport DrawerItem from './DrawerItem';\n\ntype Props = {\n  state: DrawerNavigationState<ParamListBase>;\n  navigation: DrawerNavigationHelpers;\n  descriptors: DrawerDescriptorMap;\n};\n\n/**\n * Component that renders the navigation list in the drawer.\n */\nexport default function DrawerItemList({\n  state,\n  navigation,\n  descriptors,\n}: Props) {\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const {\n    drawerActiveTintColor,\n    drawerInactiveTintColor,\n    drawerActiveBackgroundColor,\n    drawerInactiveBackgroundColor,\n  } = focusedOptions;\n\n  return state.routes.map((route, i) => {\n    const focused = i === state.index;\n\n    const onPress = () => {\n      const event = navigation.emit({\n        type: 'drawerItemPress',\n        target: route.key,\n        canPreventDefault: true,\n      });\n\n      if (!event.defaultPrevented) {\n        navigation.dispatch({\n          ...(focused\n            ? DrawerActions.closeDrawer()\n            : CommonActions.navigate({ name: route.name, merge: true })),\n          target: state.key,\n        });\n      }\n    };\n\n    const {\n      title,\n      drawerLabel,\n      drawerIcon,\n      drawerLabelStyle,\n      drawerItemStyle,\n      drawerAllowFontScaling,\n    } = descriptors[route.key].options;\n\n    return (\n      <DrawerItem\n        key={route.key}\n        label={\n          drawerLabel !== undefined\n            ? drawerLabel\n            : title !== undefined\n            ? title\n            : route.name\n        }\n        icon={drawerIcon}\n        focused={focused}\n        activeTintColor={drawerActiveTintColor}\n        inactiveTintColor={drawerInactiveTintColor}\n        activeBackgroundColor={drawerActiveBackgroundColor}\n        inactiveBackgroundColor={drawerInactiveBackgroundColor}\n        allowFontScaling={drawerAllowFontScaling}\n        labelStyle={drawerLabelStyle}\n        style={drawerItemStyle}\n        to={buildLink(route.name, route.params)}\n        onPress={onPress}\n      />\n    );\n  }) as React.ReactNode as React.ReactElement;\n}\n"],"mappings":";;;AAAA,SACEA,aADF,EAEEC,aAFF,EAKEC,cALF,QAMO,0BANP;AAOA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAGA,OAAOC,UAAP;AAWA,eAAe,SAASC,cAATA,CAAAC,IAAA,EAIL;EAAA,IAHRC,KADqC,GAI7BD,IAAA,CAHRC,KADqC;IAErCC,UAFqC,GAI7BF,IAAA,CAFRE,UAFqC;IAGrCC,WAAA,GACQH,IAAA,CADRG,WAAA;EAEA,IAAMC,SAAS,GAAGR,cAAc,EAAhC;EAEA,IAAMS,YAAY,GAAGJ,KAAK,CAACK,MAAN,CAAaL,KAAK,CAACM,KAAnB,CAArB;EACA,IAAMC,iBAAiB,GAAGL,WAAW,CAACE,YAAY,CAACI,GAAd,CAArC;EACA,IAAMC,cAAc,GAAGF,iBAAiB,CAACG,OAAzC;EAEA,IACEC,qBADI,GAKFF,cALJ,CACEE,qBADI;IAEJC,uBAFI,GAKFH,cALJ,CAEEG,uBAFI;IAGJC,2BAHI,GAKFJ,cALJ,CAGEI,2BAHI;IAIJC,6BAAA,GACEL,cALJ,CAIEK,6BAAA;EAGF,OAAOd,KAAK,CAACK,MAAN,CAAaU,GAAb,CAAiB,UAACC,KAAD,EAAQC,CAAR,EAAc;IACpC,IAAMC,OAAO,GAAGD,CAAC,KAAKjB,KAAK,CAACM,KAA5B;IAEA,IAAMa,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;MACpB,IAAMC,KAAK,GAAGnB,UAAU,CAACoB,IAAX,CAAgB;QAC5BC,IAAI,EAAE,iBADsB;QAE5BC,MAAM,EAAEP,KAAK,CAACR,GAFc;QAG5BgB,iBAAiB,EAAE;MAHS,CAAhB,CAAd;MAMA,IAAI,CAACJ,KAAK,CAACK,gBAAX,EAA6B;QAC3BxB,UAAU,CAACyB,QAAX,CAAAC,aAAA,CAAAA,aAAA,KACMT,OAAO,GACPxB,aAAa,CAACkC,WAAd,EADO,GAEPnC,aAAa,CAACoC,QAAd,CAAuB;UAAEC,IAAI,EAAEd,KAAK,CAACc,IAAd;UAAoBC,KAAK,EAAE;QAA3B,CAAvB,CAFJ;UAGAR,MAAM,EAAEvB,KAAK,CAACQ;QAAA,EAJhB;MAMD;IACF,CAfD;IAiBA,IAAAwB,qBAAA,GAOI9B,WAAW,CAACc,KAAK,CAACR,GAAP,CAAX,CAAuBE,OAP3B;MACEuB,KADI,GAAAD,qBAAA,CACJC,KADI;MAEJC,WAFI,GAAAF,qBAAA,CAEJE,WAFI;MAGJC,UAHI,GAAAH,qBAAA,CAGJG,UAHI;MAIJC,gBAJI,GAAAJ,qBAAA,CAIJI,gBAJI;MAKJC,eALI,GAAAL,qBAAA,CAKJK,eALI;MAMJC,sBAAA,GAAAN,qBAAA,CAAAM,sBAAA;IAGF,OACE1C,KAAA,CAAA2C,aAAA,CAAC1C,UAAD;MACEW,GAAG,EAAEQ,KAAK,CAACR,GADb;MAEEgC,KAAK,EACHN,WAAW,KAAKO,SAAhB,GACIP,WADJ,GAEID,KAAK,KAAKQ,SAAV,GACAR,KADA,GAEAjB,KAAK,CAACc,IAPd;MASEY,IAAI,EAAEP,UATR;MAUEjB,OAAO,EAAEA,OAVX;MAWEyB,eAAe,EAAEhC,qBAXnB;MAYEiC,iBAAiB,EAAEhC,uBAZrB;MAaEiC,qBAAqB,EAAEhC,2BAbzB;MAcEiC,uBAAuB,EAAEhC,6BAd3B;MAeEiC,gBAAgB,EAAET,sBAfpB;MAgBEU,UAAU,EAAEZ,gBAhBd;MAiBEa,KAAK,EAAEZ,eAjBT;MAkBEa,EAAE,EAAE/C,SAAS,CAACa,KAAK,CAACc,IAAP,EAAad,KAAK,CAACmC,MAAnB,CAlBf;MAmBEhC,OAAO,EAAEA;IAnBX,EADF;EAuBD,CApDM,CAAP;AAqDD"},"metadata":{},"sourceType":"module","externalDependencies":[]}