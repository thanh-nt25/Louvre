{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport AnimatedNode from \"./AnimatedNode\";\nimport { val } from \"../val\";\nimport invariant from 'invariant';\nimport { adapt } from \"../core/AnimatedBlock\";\nfunction reduce(fn) {\n  return function (input) {\n    return input.reduce(function (a, b) {\n      return fn(val(a), val(b));\n    });\n  };\n}\nfunction reduceFrom(fn, initialValue) {\n  return function (input) {\n    return input.reduce(function (a, b) {\n      return fn(val(a), val(b));\n    }, initialValue);\n  };\n}\nfunction infix(fn) {\n  return function (input) {\n    return fn(val(input[0]), val(input[1]));\n  };\n}\nfunction single(fn) {\n  return function (input) {\n    return fn(val(input[0]));\n  };\n}\nvar OPERATIONS = {\n  add: reduce(function (a, b) {\n    return a + b;\n  }),\n  sub: reduce(function (a, b) {\n    return a - b;\n  }),\n  multiply: reduce(function (a, b) {\n    return a * b;\n  }),\n  divide: reduce(function (a, b) {\n    return a / b;\n  }),\n  pow: reduce(function (a, b) {\n    return Math.pow(a, b);\n  }),\n  modulo: reduce(function (a, b) {\n    return (a % b + b) % b;\n  }),\n  sqrt: single(function (a) {\n    return Math.sqrt(a);\n  }),\n  log: single(function (a) {\n    return Math.log(a);\n  }),\n  sin: single(function (a) {\n    return Math.sin(a);\n  }),\n  cos: single(function (a) {\n    return Math.cos(a);\n  }),\n  tan: single(function (a) {\n    return Math.tan(a);\n  }),\n  acos: single(function (a) {\n    return Math.acos(a);\n  }),\n  asin: single(function (a) {\n    return Math.asin(a);\n  }),\n  atan: single(function (a) {\n    return Math.atan(a);\n  }),\n  exp: single(function (a) {\n    return Math.exp(a);\n  }),\n  round: single(function (a) {\n    return Math.round(a);\n  }),\n  abs: single(function (a) {\n    return Math.abs(a);\n  }),\n  ceil: single(function (a) {\n    return Math.ceil(a);\n  }),\n  floor: single(function (a) {\n    return Math.floor(a);\n  }),\n  max: reduce(function (a, b) {\n    return Math.max(a, b);\n  }),\n  min: reduce(function (a, b) {\n    return Math.min(a, b);\n  }),\n  and: reduceFrom(function (a, b) {\n    return a && b;\n  }, true),\n  or: reduceFrom(function (a, b) {\n    return a || b;\n  }, false),\n  not: single(function (a) {\n    return !a;\n  }),\n  defined: single(function (a) {\n    return a !== null && a !== undefined && !isNaN(a);\n  }),\n  lessThan: infix(function (a, b) {\n    return a < b;\n  }),\n  eq: infix(function (a, b) {\n    return a == b;\n  }),\n  greaterThan: infix(function (a, b) {\n    return a > b;\n  }),\n  lessOrEq: infix(function (a, b) {\n    return a <= b;\n  }),\n  greaterOrEq: infix(function (a, b) {\n    return a >= b;\n  }),\n  neq: infix(function (a, b) {\n    return a != b;\n  })\n};\nvar AnimatedOperator = function (_AnimatedNode) {\n  _inherits(AnimatedOperator, _AnimatedNode);\n  var _super = _createSuper(AnimatedOperator);\n  function AnimatedOperator(operator, input) {\n    var _this;\n    _classCallCheck(this, AnimatedOperator);\n    invariant(typeof operator === 'string', \"Reanimated: Animated.operator node first argument should be of type String, but got: \" + operator);\n    invariant(input.every(function (el) {\n      return el instanceof AnimatedNode || typeof el === 'string' || typeof el === 'number';\n    }), \"Reanimated: Animated.operator node second argument should be one or more of type AnimatedNode, String or Number but got \" + input);\n    _this = _super.call(this, {\n      type: 'op',\n      op: operator,\n      input: input\n    }, input);\n    _this._op = operator;\n    _this._input = input;\n    return _this;\n  }\n  _createClass(AnimatedOperator, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedOperator, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      if (!this._operation) {\n        this._operation = OPERATIONS[this._op];\n        invariant(this._operation, \"Illegal operator '%s'\", this._op);\n      }\n      return this._operation(this._input);\n    }\n  }]);\n  return AnimatedOperator;\n}(AnimatedNode);\nexport function createAnimatedOperator(name) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new AnimatedOperator(name, args.map(adapt));\n  };\n}","map":{"version":3,"names":["AnimatedNode","val","invariant","adapt","reduce","fn","input","a","b","reduceFrom","initialValue","infix","single","OPERATIONS","add","sub","multiply","divide","pow","Math","modulo","sqrt","log","sin","cos","tan","acos","asin","atan","exp","round","abs","ceil","floor","max","min","and","or","not","defined","undefined","isNaN","lessThan","eq","greaterThan","lessOrEq","greaterOrEq","neq","AnimatedOperator","_AnimatedNode","_inherits","_super","_createSuper","operator","_this","_classCallCheck","every","el","call","type","op","_op","_input","_createClass","key","value","toString","__nodeID","__onEvaluate","_operation","createAnimatedOperator","name","_len","arguments","length","args","Array","_key","map"],"sources":["C:/Users/Admin/Code/git clone/EThrift/client/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedOperator.js"],"sourcesContent":["import AnimatedNode from './AnimatedNode';\r\nimport { val } from '../val';\r\n\r\nimport invariant from 'invariant';\r\nimport { adapt } from '../core/AnimatedBlock';\r\n\r\nfunction reduce(fn) {\r\n  return (input) => input.reduce((a, b) => fn(val(a), val(b)));\r\n}\r\n\r\nfunction reduceFrom(fn, initialValue) {\r\n  return (input) => input.reduce((a, b) => fn(val(a), val(b)), initialValue);\r\n}\r\n\r\nfunction infix(fn) {\r\n  return (input) => fn(val(input[0]), val(input[1]));\r\n}\r\n\r\nfunction single(fn) {\r\n  return (input) => fn(val(input[0]));\r\n}\r\n\r\nconst OPERATIONS = {\r\n  // arithmetic\r\n  add: reduce((a, b) => a + b),\r\n  sub: reduce((a, b) => a - b),\r\n  multiply: reduce((a, b) => a * b),\r\n  divide: reduce((a, b) => a / b),\r\n  pow: reduce((a, b) => Math.pow(a, b)),\r\n  modulo: reduce((a, b) => ((a % b) + b) % b),\r\n  sqrt: single((a) => Math.sqrt(a)),\r\n  log: single((a) => Math.log(a)),\r\n  sin: single((a) => Math.sin(a)),\r\n  cos: single((a) => Math.cos(a)),\r\n  tan: single((a) => Math.tan(a)),\r\n  acos: single((a) => Math.acos(a)),\r\n  asin: single((a) => Math.asin(a)),\r\n  atan: single((a) => Math.atan(a)),\r\n  exp: single((a) => Math.exp(a)),\r\n  round: single((a) => Math.round(a)),\r\n  abs: single((a) => Math.abs(a)),\r\n  ceil: single((a) => Math.ceil(a)),\r\n  floor: single((a) => Math.floor(a)),\r\n  max: reduce((a, b) => Math.max(a, b)),\r\n  min: reduce((a, b) => Math.min(a, b)),\r\n\r\n  // logical\r\n  and: reduceFrom((a, b) => a && b, true),\r\n  or: reduceFrom((a, b) => a || b, false),\r\n  not: single((a) => !a),\r\n  defined: single((a) => a !== null && a !== undefined && !isNaN(a)),\r\n\r\n  // comparing\r\n  lessThan: infix((a, b) => a < b),\r\n  /* eslint-disable-next-line eqeqeq */\r\n  eq: infix((a, b) => a == b),\r\n  greaterThan: infix((a, b) => a > b),\r\n  lessOrEq: infix((a, b) => a <= b),\r\n  greaterOrEq: infix((a, b) => a >= b),\r\n  /* eslint-disable-next-line eqeqeq */\r\n  neq: infix((a, b) => a != b),\r\n};\r\n\r\nclass AnimatedOperator extends AnimatedNode {\r\n  _input;\r\n  _op;\r\n  _operation;\r\n\r\n  constructor(operator, input) {\r\n    invariant(\r\n      typeof operator === 'string',\r\n      `Reanimated: Animated.operator node first argument should be of type String, but got: ${operator}`\r\n    );\r\n    invariant(\r\n      input.every(\r\n        (el) =>\r\n          el instanceof AnimatedNode ||\r\n          typeof el === 'string' ||\r\n          typeof el === 'number'\r\n      ),\r\n      `Reanimated: Animated.operator node second argument should be one or more of type AnimatedNode, String or Number but got ${input}`\r\n    );\r\n    super({ type: 'op', op: operator, input }, input);\r\n    this._op = operator;\r\n    this._input = input;\r\n  }\r\n\r\n  toString() {\r\n    return `AnimatedOperator, id: ${this.__nodeID}`;\r\n  }\r\n\r\n  __onEvaluate() {\r\n    if (!this._operation) {\r\n      this._operation = OPERATIONS[this._op];\r\n      invariant(this._operation, `Illegal operator '%s'`, this._op);\r\n    }\r\n    return this._operation(this._input);\r\n  }\r\n}\r\n\r\nexport function createAnimatedOperator(name) {\r\n  return (...args) => new AnimatedOperator(name, args.map(adapt));\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}