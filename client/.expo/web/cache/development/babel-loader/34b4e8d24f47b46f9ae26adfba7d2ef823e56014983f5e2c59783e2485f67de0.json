{"ast":null,"code":"import { useCallback } from 'react';\nimport { useAnimatedStyle } from \"./useAnimatedStyle\";\nexport var useAnimatedProps = useAnimatedStyle;\nexport function useWorkletCallback(fun, deps) {\n  return useCallback(fun, deps !== null && deps !== void 0 ? deps : []);\n}\nexport { useEvent, useHandler } from \"./utils\";","map":{"version":3,"names":["useCallback","useAnimatedStyle","useAnimatedProps","useWorkletCallback","fun","deps","useEvent","useHandler"],"sources":["C:/Users/Admin/Code/git clone/EThrift/client/node_modules/react-native-reanimated/lib/reanimated2/hook/Hooks.js"],"sourcesContent":["import { useCallback } from 'react';\r\nimport { useAnimatedStyle } from './useAnimatedStyle';\r\n// TODO: we should make sure that when useAP is used we are not assigning styles\r\n// when you need styles to animated you should always use useAS\r\nexport const useAnimatedProps = useAnimatedStyle;\r\nexport function useWorkletCallback(fun, deps) {\r\n    return useCallback(fun, deps !== null && deps !== void 0 ? deps : []);\r\n}\r\nexport { useEvent, useHandler } from './utils';\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,gBAAgB;AAGzB,OAAO,IAAMC,gBAAgB,GAAGD,gBAAgB;AAChD,OAAO,SAASE,kBAAkBA,CAACC,GAAG,EAAEC,IAAI,EAAE;EAC1C,OAAOL,WAAW,CAACI,GAAG,EAAEC,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAGA,IAAI,GAAG,EAAE,CAAC;AACzE;AACA,SAASC,QAAQ,EAAEC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}