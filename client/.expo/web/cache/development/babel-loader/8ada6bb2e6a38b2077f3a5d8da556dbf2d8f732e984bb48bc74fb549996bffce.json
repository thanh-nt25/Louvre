{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\", \"onPress\", \"onLongPress\", \"to\", \"accessibilityRole\"],\n  _excluded2 = [\"icon\", \"label\", \"labelStyle\", \"to\", \"focused\", \"allowFontScaling\", \"activeTintColor\", \"inactiveTintColor\", \"activeBackgroundColor\", \"inactiveBackgroundColor\", \"style\", \"onPress\", \"pressColor\", \"pressOpacity\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { PlatformPressable } from '@react-navigation/elements';\nimport { Link, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nvar LinkPressable = function LinkPressable(_ref) {\n  var children = _ref.children,\n    style = _ref.style,\n    _onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    to = _ref.to,\n    accessibilityRole = _ref.accessibilityRole,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  if (Platform.OS === 'web' && to) {\n    return React.createElement(Link, _extends({}, rest, {\n      to: to,\n      style: [styles.button, style],\n      onPress: function onPress(e) {\n        if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (e.button == null || e.button === 0)) {\n          e.preventDefault();\n          _onPress === null || _onPress === void 0 ? void 0 : _onPress(e);\n        }\n      },\n      onLongPress: onLongPress !== null && onLongPress !== void 0 ? onLongPress : undefined\n    }), children);\n  } else {\n    return React.createElement(PlatformPressable, _extends({}, rest, {\n      accessibilityRole: accessibilityRole,\n      onPress: _onPress\n    }), React.createElement(View, {\n      style: style\n    }, children));\n  }\n};\nexport default function DrawerItem(props) {\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var icon = props.icon,\n    label = props.label,\n    labelStyle = props.labelStyle,\n    to = props.to,\n    _props$focused = props.focused,\n    focused = _props$focused === void 0 ? false : _props$focused,\n    allowFontScaling = props.allowFontScaling,\n    _props$activeTintColo = props.activeTintColor,\n    activeTintColor = _props$activeTintColo === void 0 ? colors.primary : _props$activeTintColo,\n    _props$inactiveTintCo = props.inactiveTintColor,\n    inactiveTintColor = _props$inactiveTintCo === void 0 ? Color(colors.text).alpha(0.68).rgb().string() : _props$inactiveTintCo,\n    _props$activeBackgrou = props.activeBackgroundColor,\n    activeBackgroundColor = _props$activeBackgrou === void 0 ? Color(activeTintColor).alpha(0.12).rgb().string() : _props$activeBackgrou,\n    _props$inactiveBackgr = props.inactiveBackgroundColor,\n    inactiveBackgroundColor = _props$inactiveBackgr === void 0 ? 'transparent' : _props$inactiveBackgr,\n    style = props.style,\n    onPress = props.onPress,\n    pressColor = props.pressColor,\n    pressOpacity = props.pressOpacity,\n    rest = _objectWithoutProperties(props, _excluded2);\n  var _StyleSheet$flatten = StyleSheet.flatten(style || {}),\n    _StyleSheet$flatten$b = _StyleSheet$flatten.borderRadius,\n    borderRadius = _StyleSheet$flatten$b === void 0 ? 4 : _StyleSheet$flatten$b;\n  var color = focused ? activeTintColor : inactiveTintColor;\n  var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  var iconNode = icon ? icon({\n    size: 24,\n    focused: focused,\n    color: color\n  }) : null;\n  return React.createElement(View, _extends({\n    collapsable: false\n  }, rest, {\n    style: [styles.container, {\n      borderRadius: borderRadius,\n      backgroundColor: backgroundColor\n    }, style]\n  }), React.createElement(LinkPressable, {\n    onPress: onPress,\n    style: [styles.wrapper, {\n      borderRadius: borderRadius\n    }],\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      selected: focused\n    },\n    pressColor: pressColor,\n    pressOpacity: pressOpacity,\n    to: to\n  }, React.createElement(React.Fragment, null, iconNode, React.createElement(View, {\n    style: [styles.label, {\n      marginLeft: iconNode ? 32 : 0,\n      marginVertical: 5\n    }]\n  }, typeof label === 'string' ? React.createElement(Text, {\n    numberOfLines: 1,\n    allowFontScaling: allowFontScaling,\n    style: [{\n      color: color,\n      fontWeight: '500'\n    }, labelStyle]\n  }, label) : label({\n    color: color,\n    focused: focused\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n    overflow: 'hidden'\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  label: {\n    marginRight: 32,\n    flex: 1\n  },\n  button: {\n    display: 'flex'\n  }\n});","map":{"version":3,"names":["PlatformPressable","Link","useTheme","Color","React","Platform","StyleSheet","Text","View","LinkPressable","_ref","children","style","onPress","onLongPress","to","accessibilityRole","rest","_objectWithoutProperties","_excluded","OS","createElement","_extends","styles","button","e","metaKey","altKey","ctrlKey","shiftKey","preventDefault","undefined","DrawerItem","props","_useTheme","colors","icon","label","labelStyle","_props$focused","focused","allowFontScaling","_props$activeTintColo","activeTintColor","primary","_props$inactiveTintCo","inactiveTintColor","text","alpha","rgb","string","_props$activeBackgrou","activeBackgroundColor","_props$inactiveBackgr","inactiveBackgroundColor","pressColor","pressOpacity","_excluded2","_StyleSheet$flatten","flatten","_StyleSheet$flatten$b","borderRadius","color","backgroundColor","iconNode","size","collapsable","container","wrapper","accessibilityState","selected","Fragment","marginLeft","marginVertical","numberOfLines","fontWeight","create","marginHorizontal","overflow","flexDirection","alignItems","padding","marginRight","flex","display"],"sources":["C:\\Users\\Admin\\Code\\git clone\\EThrift\\client\\node_modules\\@react-navigation\\drawer\\lib\\module\\views\\DrawerItem.tsx"],"sourcesContent":["import { PlatformPressable } from '@react-navigation/elements';\nimport { Link, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  Text,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\ntype Props = {\n  /**\n   * The label text of the item.\n   */\n  label:\n    | string\n    | ((props: { focused: boolean; color: string }) => React.ReactNode);\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: (props: {\n    focused: boolean;\n    size: number;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * URL to use for the link to the tab.\n   */\n  to?: string;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  focused?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress: () => void;\n  /**\n   * Color for the icon and label when the item is active.\n   */\n  activeTintColor?: string;\n  /**\n   * Color for the icon and label when the item is inactive.\n   */\n  inactiveTintColor?: string;\n  /**\n   * Background color for item when its active.\n   */\n  activeBackgroundColor?: string;\n  /**\n   * Background color for item when its inactive.\n   */\n  inactiveBackgroundColor?: string;\n  /**\n   * Color of the touchable effect on press.\n   * Only supported on Android.\n   *\n   * @platform android\n   */\n  pressColor?: string;\n  /**\n   * Opacity of the touchable effect on press.\n   * Only supported on iOS.\n   *\n   * @platform ios\n   */\n  pressOpacity?: number;\n  /**\n   * Style object for the label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Style object for the wrapper element.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Whether label font should scale to respect Text Size accessibility settings.\n   */\n  allowFontScaling?: boolean;\n};\n\nconst LinkPressable = ({\n  children,\n  style,\n  onPress,\n  onLongPress,\n  to,\n  accessibilityRole,\n  ...rest\n}: Omit<React.ComponentProps<typeof PlatformPressable>, 'style'> & {\n  style: StyleProp<ViewStyle>;\n} & {\n  to?: string;\n  children: React.ReactNode;\n  onPress?: () => void;\n}) => {\n  if (Platform.OS === 'web' && to) {\n    // React Native Web doesn't forward `onClick` if we use `TouchableWithoutFeedback`.\n    // We need to use `onClick` to be able to prevent default browser handling of links.\n    return (\n      <Link\n        {...rest}\n        to={to}\n        style={[styles.button, style]}\n        onPress={(e: any) => {\n          if (\n            !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n            (e.button == null || e.button === 0) // ignore everything but left clicks\n          ) {\n            e.preventDefault();\n            onPress?.(e);\n          }\n        }}\n        onLongPress={onLongPress ?? undefined}\n      >\n        {children}\n      </Link>\n    );\n  } else {\n    return (\n      <PlatformPressable\n        {...rest}\n        accessibilityRole={accessibilityRole}\n        onPress={onPress}\n      >\n        <View style={style}>{children}</View>\n      </PlatformPressable>\n    );\n  }\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n */\nexport default function DrawerItem(props: Props) {\n  const { colors } = useTheme();\n\n  const {\n    icon,\n    label,\n    labelStyle,\n    to,\n    focused = false,\n    allowFontScaling,\n    activeTintColor = colors.primary,\n    inactiveTintColor = Color(colors.text).alpha(0.68).rgb().string(),\n    activeBackgroundColor = Color(activeTintColor).alpha(0.12).rgb().string(),\n    inactiveBackgroundColor = 'transparent',\n    style,\n    onPress,\n    pressColor,\n    pressOpacity,\n    ...rest\n  } = props;\n\n  const { borderRadius = 4 } = StyleSheet.flatten(style || {});\n  const color = focused ? activeTintColor : inactiveTintColor;\n  const backgroundColor = focused\n    ? activeBackgroundColor\n    : inactiveBackgroundColor;\n\n  const iconNode = icon ? icon({ size: 24, focused, color }) : null;\n\n  return (\n    <View\n      collapsable={false}\n      {...rest}\n      style={[styles.container, { borderRadius, backgroundColor }, style]}\n    >\n      <LinkPressable\n        onPress={onPress}\n        style={[styles.wrapper, { borderRadius }]}\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: focused }}\n        pressColor={pressColor}\n        pressOpacity={pressOpacity}\n        to={to}\n      >\n        <React.Fragment>\n          {iconNode}\n          <View\n            style={[\n              styles.label,\n              { marginLeft: iconNode ? 32 : 0, marginVertical: 5 },\n            ]}\n          >\n            {typeof label === 'string' ? (\n              <Text\n                numberOfLines={1}\n                allowFontScaling={allowFontScaling}\n                style={[\n                  {\n                    color,\n                    fontWeight: '500',\n                  },\n                  labelStyle,\n                ]}\n              >\n                {label}\n              </Text>\n            ) : (\n              label({ color, focused })\n            )}\n          </View>\n        </React.Fragment>\n      </LinkPressable>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n    overflow: 'hidden',\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  label: {\n    marginRight: 32,\n    flex: 1,\n  },\n  button: {\n    display: 'flex',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}