{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport invariant from 'invariant';\nimport AnimatedNode, { getCallID, setCallID } from \"./AnimatedNode\";\nimport AnimatedClock from \"./AnimatedClock\";\nimport { val } from \"../val\";\nexport var AnimatedParam = function (_AnimatedNode) {\n  _inherits(AnimatedParam, _AnimatedNode);\n  var _super = _createSuper(AnimatedParam);\n  function AnimatedParam() {\n    var _this;\n    _classCallCheck(this, AnimatedParam);\n    _this = _super.call(this, {\n      type: 'param'\n    }, []);\n    _this.argsStack = [];\n    _this.__attach();\n    return _this;\n  }\n  _createClass(AnimatedParam, [{\n    key: \"beginContext\",\n    value: function beginContext(ref, prevCallID) {\n      this._prevCallID = prevCallID;\n      this.argsStack.push(ref);\n    }\n  }, {\n    key: \"endContext\",\n    value: function endContext() {\n      this.argsStack.pop();\n    }\n  }, {\n    key: \"_getTopNode\",\n    value: function _getTopNode() {\n      if (this.argsStack.length === 0) throw new Error(\"param: Invocation failed because argsStack is empty\");\n      var top = this.argsStack[this.argsStack.length - 1];\n      return top;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var top = this._getTopNode();\n      if (top.setValue) {\n        var callID = getCallID();\n        setCallID(this._prevCallID);\n        top.setValue(value);\n        setCallID(callID);\n      } else {\n        throw new Error(\"param: setValue(\" + value + \") failed because the top element has no known method for updating it's current value.\");\n      }\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      var callID = getCallID();\n      setCallID(this._prevCallID);\n      var top = this._getTopNode();\n      var value = val(top);\n      setCallID(callID);\n      return value;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var node = this._getTopNode();\n      invariant(node instanceof AnimatedClock || node instanceof AnimatedParam, \"param: top node should be of type AnimatedClock but got \" + node);\n      node.start();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var node = this._getTopNode();\n      invariant(node instanceof AnimatedClock || node instanceof AnimatedParam, \"param: top node should be of type AnimatedClock but got \" + node);\n      node.stop();\n    }\n  }, {\n    key: \"isRunning\",\n    value: function isRunning() {\n      var node = this._getTopNode();\n      if (node instanceof AnimatedParam) {\n        return node.isRunning();\n      }\n      invariant(node instanceof AnimatedClock, \"param: top node should be of type AnimatedClock but got \" + node);\n      return node.isStarted();\n    }\n  }]);\n  return AnimatedParam;\n}(AnimatedNode);\nexport function createAnimatedParam() {\n  return new AnimatedParam();\n}","map":{"version":3,"names":["invariant","AnimatedNode","getCallID","setCallID","AnimatedClock","val","AnimatedParam","_AnimatedNode","_inherits","_super","_createSuper","_this","_classCallCheck","call","type","argsStack","__attach","_createClass","key","value","beginContext","ref","prevCallID","_prevCallID","push","endContext","pop","_getTopNode","length","Error","top","setValue","callID","__onEvaluate","start","node","stop","isRunning","isStarted","createAnimatedParam"],"sources":["C:/Users/Admin/Code/git clone/EThrift/client/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedParam.js"],"sourcesContent":["import invariant from 'invariant';\r\nimport AnimatedNode, { getCallID, setCallID } from './AnimatedNode';\r\nimport AnimatedClock from './AnimatedClock';\r\nimport { val } from '../val';\r\n\r\nexport class AnimatedParam extends AnimatedNode {\r\n  argsStack = [];\r\n  _prevCallID;\r\n\r\n  constructor() {\r\n    super({ type: 'param' }, []);\r\n    this.__attach();\r\n  }\r\n\r\n  beginContext(ref, prevCallID) {\r\n    this._prevCallID = prevCallID;\r\n    this.argsStack.push(ref);\r\n  }\r\n\r\n  endContext() {\r\n    this.argsStack.pop();\r\n  }\r\n\r\n  _getTopNode() {\r\n    if (this.argsStack.length === 0)\r\n      throw new Error(`param: Invocation failed because argsStack is empty`);\r\n    const top = this.argsStack[this.argsStack.length - 1];\r\n    return top;\r\n  }\r\n\r\n  setValue(value) {\r\n    const top = this._getTopNode();\r\n    if (top.setValue) {\r\n      const callID = getCallID();\r\n      setCallID(this._prevCallID);\r\n      top.setValue(value);\r\n      setCallID(callID);\r\n    } else {\r\n      throw new Error(\r\n        `param: setValue(${value}) failed because the top element has no known method for updating it's current value.`\r\n      );\r\n    }\r\n  }\r\n\r\n  __onEvaluate() {\r\n    const callID = getCallID();\r\n    setCallID(this._prevCallID);\r\n    const top = this._getTopNode();\r\n    const value = val(top);\r\n    setCallID(callID);\r\n    return value;\r\n  }\r\n\r\n  start() {\r\n    const node = this._getTopNode();\r\n    invariant(\r\n      node instanceof AnimatedClock || node instanceof AnimatedParam,\r\n      `param: top node should be of type AnimatedClock but got ${node}`\r\n    );\r\n    node.start();\r\n  }\r\n\r\n  stop() {\r\n    const node = this._getTopNode();\r\n    invariant(\r\n      node instanceof AnimatedClock || node instanceof AnimatedParam,\r\n      `param: top node should be of type AnimatedClock but got ${node}`\r\n    );\r\n    node.stop();\r\n  }\r\n\r\n  isRunning() {\r\n    const node = this._getTopNode();\r\n\r\n    if (node instanceof AnimatedParam) {\r\n      return node.isRunning();\r\n    }\r\n    invariant(\r\n      node instanceof AnimatedClock,\r\n      `param: top node should be of type AnimatedClock but got ${node}`\r\n    );\r\n    return node.isStarted();\r\n  }\r\n}\r\n\r\nexport function createAnimatedParam() {\r\n  return new AnimatedParam();\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}