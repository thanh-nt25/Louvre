{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport { add, cond, concat, lessThan, multiply, round, sub, proc } from \"../base\";\nimport AnimatedNode from \"../core/AnimatedNode\";\nvar procColor = proc(function (r, g, b, a) {\n  var color = add(multiply(a, 1 << 24), multiply(round(r), 1 << 16), multiply(round(g), 1 << 8), round(b));\n  if (Platform.OS === 'android') {\n    return cond(lessThan(color, 1 << 31 >>> 0), color, sub(color, Math.pow(2, 32)));\n  }\n  return color;\n});\nexport default function color(r, g, b) {\n  var a = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  if (Platform.OS === 'web') {\n    return concat('rgba(', r, ',', g, ',', b, ',', a, ')');\n  }\n  if (a instanceof AnimatedNode) {\n    a = round(multiply(a, 255));\n  } else {\n    a = Math.round(a * 255);\n  }\n  return procColor(r, g, b, a);\n}","map":{"version":3,"names":["add","cond","concat","lessThan","multiply","round","sub","proc","AnimatedNode","procColor","r","g","b","a","color","Platform","OS","Math","pow","arguments","length","undefined"],"sources":["C:/Users/Admin/Code/git clone/EThrift/client/node_modules/react-native-reanimated/lib/reanimated1/derived/color.js"],"sourcesContent":["import { Platform } from 'react-native';\r\n\r\nimport {\r\n  add,\r\n  cond,\r\n  concat,\r\n  lessThan,\r\n  multiply,\r\n  round,\r\n  sub,\r\n  proc,\r\n} from '../base';\r\nimport AnimatedNode from '../core/AnimatedNode';\r\n\r\nconst procColor = proc(function (r, g, b, a) {\r\n  const color = add(\r\n    multiply(a, 1 << 24),\r\n    multiply(round(r), 1 << 16),\r\n    multiply(round(g), 1 << 8),\r\n    round(b)\r\n  );\r\n\r\n  if (Platform.OS === 'android') {\r\n    // on Android color is represented as signed 32 bit int\r\n    return cond(\r\n      lessThan(color, (1 << 31) >>> 0),\r\n      color,\r\n      sub(color, Math.pow(2, 32))\r\n    );\r\n  }\r\n  return color;\r\n});\r\n\r\nexport default function color(r, g, b, a = 1) {\r\n  if (Platform.OS === 'web') {\r\n    // doesn't support bit shifting\r\n    return concat('rgba(', r, ',', g, ',', b, ',', a, ')');\r\n  }\r\n\r\n  if (a instanceof AnimatedNode) {\r\n    a = round(multiply(a, 255));\r\n  } else {\r\n    a = Math.round(a * 255);\r\n  }\r\n\r\n  return procColor(r, g, b, a);\r\n}\r\n"],"mappings":";AAEA,SACEA,GAAG,EACHC,IAAI,EACJC,MAAM,EACNC,QAAQ,EACRC,QAAQ,EACRC,KAAK,EACLC,GAAG,EACHC,IAAI;AAEN,OAAOC,YAAY;AAEnB,IAAMC,SAAS,GAAGF,IAAI,CAAC,UAAUG,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EAC3C,IAAMC,KAAK,GAAGd,GAAG,CACfI,QAAQ,CAACS,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,EACpBT,QAAQ,CAACC,KAAK,CAACK,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,EAC3BN,QAAQ,CAACC,KAAK,CAACM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAC1BN,KAAK,CAACO,CAAC,CACT,CAAC;EAED,IAAIG,QAAQ,CAACC,EAAE,KAAK,SAAS,EAAE;IAE7B,OAAOf,IAAI,CACTE,QAAQ,CAACW,KAAK,EAAG,CAAC,IAAI,EAAE,KAAM,CAAC,CAAC,EAChCA,KAAK,EACLR,GAAG,CAACQ,KAAK,EAAEG,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAC5B,CAAC;EACH;EACA,OAAOJ,KAAK;AACd,CAAC,CAAC;AAEF,eAAe,SAASA,KAAKA,CAACJ,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAS;EAAA,IAAPC,CAAC,GAAAM,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAC1C,IAAIJ,QAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;IAEzB,OAAOd,MAAM,CAAC,OAAO,EAAEQ,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,CAAC;EACxD;EAEA,IAAIA,CAAC,YAAYL,YAAY,EAAE;IAC7BK,CAAC,GAAGR,KAAK,CAACD,QAAQ,CAACS,CAAC,EAAE,GAAG,CAAC,CAAC;EAC7B,CAAC,MAAM;IACLA,CAAC,GAAGI,IAAI,CAACZ,KAAK,CAACQ,CAAC,GAAG,GAAG,CAAC;EACzB;EAEA,OAAOJ,SAAS,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;AAC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}