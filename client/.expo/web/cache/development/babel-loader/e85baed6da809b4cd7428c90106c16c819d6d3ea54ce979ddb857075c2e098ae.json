{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { runOnUI } from \"../core\";\nimport { withStyleAnimation } from \"../animation/styleAnimation\";\nimport { ColorProperties } from \"../UpdateProps\";\nimport { processColor } from \"../Colors\";\nrunOnUI(function () {\n  var _f = function _f() {\n    var configs = {};\n    var enteringAnimationForTag = {};\n    global.LayoutAnimationRepository = {\n      configs: configs,\n      registerConfig: function registerConfig(tag, config) {\n        configs[tag] = config;\n        enteringAnimationForTag[tag] = null;\n      },\n      removeConfig: function removeConfig(tag) {\n        delete configs[tag];\n        delete enteringAnimationForTag[tag];\n      },\n      startAnimationForTag: function startAnimationForTag(tag, type, yogaValues) {\n        if (configs[tag] == null) {\n          return;\n        }\n        var style = configs[tag][type](yogaValues);\n        var currentAnimation = style.animations;\n        if (type === 'entering') {\n          enteringAnimationForTag[tag] = style;\n        } else if (type === 'layout' && enteringAnimationForTag[tag] !== null) {\n          var entryAniamtion = enteringAnimationForTag[tag].animations;\n          var layoutAnimation = style.animations;\n          currentAnimation = {};\n          for (var key in entryAniamtion) {\n            currentAnimation[key] = entryAniamtion[key];\n          }\n          for (var _key in layoutAnimation) {\n            currentAnimation[_key] = layoutAnimation[_key];\n          }\n        }\n        var sv = configs[tag].sv;\n        _stopObservingProgress(tag, false);\n        _startObservingProgress(tag, sv);\n        var backupColor = {};\n        for (var _key2 in style.initialValues) {\n          if (ColorProperties.includes(_key2)) {\n            var value = style.initialValues[_key2];\n            backupColor[_key2] = value;\n            style.initialValues[_key2] = processColor(value);\n          }\n        }\n        sv.value = _extends({}, sv._value, style.initialValues);\n        _stopObservingProgress(tag, false);\n        var animation = withStyleAnimation(currentAnimation);\n        animation.callback = function (finished) {\n          if (finished) {\n            _stopObservingProgress(tag, finished);\n          }\n          style.callback && style.callback(finished);\n        };\n        if (backupColor) {\n          configs[tag].sv._value = _extends(_extends({}, configs[tag].sv.value), backupColor);\n        }\n        configs[tag].sv.value = animation;\n        _startObservingProgress(tag, sv);\n      }\n    };\n  };\n  _f._closure = {\n    ColorProperties: ColorProperties,\n    processColor: processColor,\n    withStyleAnimation: withStyleAnimation\n  };\n  _f.asString = \"function _f(){const{ColorProperties,processColor,withStyleAnimation}=jsThis._closure;{const configs={};const enteringAnimationForTag={};global.LayoutAnimationRepository={configs:configs,registerConfig:function(tag,config){configs[tag]=config;enteringAnimationForTag[tag]=null;},removeConfig:function(tag){delete configs[tag];delete enteringAnimationForTag[tag];},startAnimationForTag:function(tag,type,yogaValues){if(configs[tag]==null){return;}const style=configs[tag][type](yogaValues);let currentAnimation=style.animations;if(type==='entering'){enteringAnimationForTag[tag]=style;}else if(type==='layout'&&enteringAnimationForTag[tag]!==null){const entryAniamtion=enteringAnimationForTag[tag].animations;const layoutAnimation=style.animations;currentAnimation={};for(const key in entryAniamtion){currentAnimation[key]=entryAniamtion[key];}for(const key in layoutAnimation){currentAnimation[key]=layoutAnimation[key];}}const sv=configs[tag].sv;_stopObservingProgress(tag,false);_startObservingProgress(tag,sv);const backupColor={};for(const key in style.initialValues){if(ColorProperties.includes(key)){const value=style.initialValues[key];backupColor[key]=value;style.initialValues[key]=processColor(value);}}sv.value=Object.assign({},sv._value,style.initialValues);_stopObservingProgress(tag,false);const animation=withStyleAnimation(currentAnimation);animation.callback=function(finished){if(finished){_stopObservingProgress(tag,finished);}style.callback&&style.callback(finished);};if(backupColor){configs[tag].sv._value=Object.assign(Object.assign({},configs[tag].sv.value),backupColor);}configs[tag].sv.value=animation;_startObservingProgress(tag,sv);}};}}\";\n  _f.__workletHash = 15633326713685;\n  _f.__location = \"C:\\\\Users\\\\Admin\\\\Code\\\\git clone\\\\EThrift\\\\client\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\layoutReanimation\\\\LayoutAnimationRepository.js (6:8)\";\n  return _f;\n}())();","map":{"version":3,"names":["runOnUI","withStyleAnimation","ColorProperties","processColor","_f","configs","enteringAnimationForTag","global","LayoutAnimationRepository","registerConfig","tag","config","removeConfig","startAnimationForTag","type","yogaValues","style","currentAnimation","animations","entryAniamtion","layoutAnimation","key","sv","_stopObservingProgress","_startObservingProgress","backupColor","initialValues","includes","value","_extends","_value","animation","callback","finished","_closure","asString","__workletHash","__location"],"sources":["C:/Users/Admin/Code/git clone/EThrift/client/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/LayoutAnimationRepository.js"],"sourcesContent":["/* global _stopObservingProgress, _startObservingProgress */\r\nimport { runOnUI } from '../core';\r\nimport { withStyleAnimation } from '../animation/styleAnimation';\r\nimport { ColorProperties } from '../UpdateProps';\r\nimport { processColor } from '../Colors';\r\nrunOnUI(() => {\r\n    'worklet';\r\n    const configs = {};\r\n    const enteringAnimationForTag = {};\r\n    global.LayoutAnimationRepository = {\r\n        configs,\r\n        registerConfig(tag, config) {\r\n            configs[tag] = config;\r\n            enteringAnimationForTag[tag] = null;\r\n        },\r\n        removeConfig(tag) {\r\n            delete configs[tag];\r\n            delete enteringAnimationForTag[tag];\r\n        },\r\n        startAnimationForTag(tag, type, yogaValues) {\r\n            if (configs[tag] == null) {\r\n                return; // :(\r\n            }\r\n            const style = configs[tag][type](yogaValues);\r\n            let currentAnimation = style.animations;\r\n            if (type === 'entering') {\r\n                enteringAnimationForTag[tag] = style;\r\n            }\r\n            else if (type === 'layout' && enteringAnimationForTag[tag] !== null) {\r\n                const entryAniamtion = enteringAnimationForTag[tag].animations;\r\n                const layoutAnimation = style.animations;\r\n                currentAnimation = {};\r\n                for (const key in entryAniamtion) {\r\n                    currentAnimation[key] = entryAniamtion[key];\r\n                }\r\n                for (const key in layoutAnimation) {\r\n                    currentAnimation[key] = layoutAnimation[key];\r\n                }\r\n            }\r\n            const sv = configs[tag].sv;\r\n            _stopObservingProgress(tag, false);\r\n            _startObservingProgress(tag, sv);\r\n            const backupColor = {};\r\n            for (const key in style.initialValues) {\r\n                if (ColorProperties.includes(key)) {\r\n                    const value = style.initialValues[key];\r\n                    backupColor[key] = value;\r\n                    style.initialValues[key] = processColor(value);\r\n                }\r\n            }\r\n            sv.value = Object.assign({}, sv._value, style.initialValues);\r\n            _stopObservingProgress(tag, false);\r\n            const animation = withStyleAnimation(currentAnimation);\r\n            animation.callback = (finished) => {\r\n                if (finished) {\r\n                    _stopObservingProgress(tag, finished);\r\n                }\r\n                style.callback && style.callback(finished);\r\n            };\r\n            if (backupColor) {\r\n                configs[tag].sv._value = Object.assign(Object.assign({}, configs[tag].sv.value), backupColor);\r\n            }\r\n            configs[tag].sv.value = animation;\r\n            _startObservingProgress(tag, sv);\r\n        },\r\n    };\r\n})();\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}